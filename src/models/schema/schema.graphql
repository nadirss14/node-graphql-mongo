type Email {
	provider: String!
	email: String!
}
type SocialMedia {
	name: String!
	url: String!
}

type Portfolio {
	_id: ID!
	version: String!
	name: String!
	lastName: String!
	country: String!
	city: String!
	birthdate: String!
	gender: String!
	profession: String
	occupation: String
	email: [Email]
	socialMedia: [SocialMedia]
	site: String
	about: String
	hobbies: String
}

type User {
	_id: ID!
	firstName: String!
	lastName: String!
	email: String!
	password: String!
}

type Query {
	getPortfolios: [Portfolio]
	getPortfolio(id: ID!): Portfolio
	getUsers: [User]
	getUser(id: ID!): User
}

input PortfolioInput {
	version: String!
	name: String!
	lastName: String!
	country: String!
	city: String!
	birthdate: String
	gender: String!
	profession: String
	occupation: String
	email: [EmailInput]
	socialMedia: [SocialMediaInput]
	site: String
	about: String
	hobbies: String
}

input EmailInput {
	provider: String!
	email: String!
}
input SocialMediaInput {
	name: String!
	url: String!
}

input PortfolioUpdate {
	name: String
	lastName: String
	country: String
	city: String
	birthdate: String
	gender: String
	profession: String
	occupation: String
	email: [EmailUpdate]
	socialMedia: [SocialMediaUpdate]
	site: String
	about: String
	hobbies: String
}

input EmailUpdate {
	provider: String!
	email: String!
}
input SocialMediaUpdate {
	name: String!
	url: String!
}

type Mutation {
	createPortfolio(input: PortfolioInput!): Portfolio
	updatePortfolio(_id: ID!, input: PortfolioUpdate): Portfolio
}
